/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/router';


import {
  SfApp as SfApp
} from './components/sf-app/sf-app';

interface HTMLSfAppElement extends SfApp, HTMLElement {
}
declare var HTMLSfAppElement: {
  prototype: HTMLSfAppElement;
  new (): HTMLSfAppElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "sf-app": HTMLSfAppElement;
  }
  interface ElementTagNameMap {
      "sf-app": HTMLSfAppElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "sf-app": JSXElements.SfAppAttributes;
      }
  }
  namespace JSXElements {
      export interface SfAppAttributes extends HTMLAttributes {
          mode?: string,
          color?: string,
        
      }
  }
}


import {
  SfMap as SfMap
} from './components/sf-map/sf-map';

interface HTMLSfMapElement extends SfMap, HTMLElement {
}
declare var HTMLSfMapElement: {
  prototype: HTMLSfMapElement;
  new (): HTMLSfMapElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "sf-map": HTMLSfMapElement;
  }
  interface ElementTagNameMap {
      "sf-map": HTMLSfMapElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "sf-map": JSXElements.SfMapAttributes;
      }
  }
  namespace JSXElements {
      export interface SfMapAttributes extends HTMLAttributes {
          mode?: string,
          color?: string,
        
          latitude?: string,
          longitude?: string,
          vehicleList?: Vehicle[]
      }
  }
}


import {
  SfRouteList as SfRoutelist
} from './components/sf-routeList/sf-routeList';

interface HTMLSfRoutelistElement extends SfRoutelist, HTMLElement {
}
declare var HTMLSfRoutelistElement: {
  prototype: HTMLSfRoutelistElement;
  new (): HTMLSfRoutelistElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "sf-routelist": HTMLSfRoutelistElement;
  }
  interface ElementTagNameMap {
      "sf-routelist": HTMLSfRoutelistElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "sf-routelist": JSXElements.SfRoutelistAttributes;
      }
  }
  namespace JSXElements {
      export interface SfRoutelistAttributes extends HTMLAttributes {
          mode?: string,
          color?: string,
        
      }
  }
}


import {
  SfVehicle as SfVehicle
} from './components/sf-vehicle/sf-vehicle';

interface HTMLSfVehicleElement extends SfVehicle, HTMLElement {
}
declare var HTMLSfVehicleElement: {
  prototype: HTMLSfVehicleElement;
  new (): HTMLSfVehicleElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "sf-vehicle": HTMLSfVehicleElement;
  }
  interface ElementTagNameMap {
      "sf-vehicle": HTMLSfVehicleElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "sf-vehicle": JSXElements.SfVehicleAttributes;
      }
  }
  namespace JSXElements {
      export interface SfVehicleAttributes extends HTMLAttributes {
          mode?: string,
          color?: string,
        
      }
  }
}

